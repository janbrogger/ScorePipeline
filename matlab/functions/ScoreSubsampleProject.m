function ScoreSubsampleProject(searchResultId, number)

if number <= 0
    error('Number must be larger than zero');
end

testQuery = ['SELECT [SearchResult].SearchResultId ' ...
    'FROM SearchResult ' ...
    'WHERE [SearchResult].SearchResultId = ' num2str(searchResultId) ...
    ];
testData = ScoreQueryRun(testQuery);
if strcmp(testData,'No Data') == 0
        %USE HolbergAnon
        %SELECT SearchResultId, COUNT(SearchResultStudyId) AS Study_n FROM SearchResult_Study GROUP BY SearchResultId
        %SELECT SearchResultId, COUNT(SearchResultDescriptionId) AS Description_n FROM SearchResult_Description GROUP BY SearchResultId
        %SELECT SearchResultId, COUNT(SearchResultEventCodingId) AS EventCoding_n FROM SearchResult_EventCoding GROUP BY SearchResultId
        %SELECT SearchResultId, COUNT(SearchResultEventId) AS Event_n FROM SearchResult_Event GROUP BY SearchResultId
        %DELETE FROM SearchResult WHERE SearchResultId > 1

        %First, clone the search project, then subsample by deleting
        %unwanted records
        dupQuery1 = [...
        'INSERT INTO SearchResult ([SearchSavedId],[DatePerformed],[Comment],[UserId]) ' ...
        'SELECT [SearchSavedId],[DatePerformed],N''(sub) '' + [Comment],[UserId] '...
        'FROM SearchResult ' ...
        'WHERE SearchResultId = ' num2str(searchResultId) ...
        ];
        ScoreQueryRun(dupQuery1);
        
        newQuery = ['SELECT MAX([SearchResult].SearchResultId) ' ...
        'FROM SearchResult ' ...    
        ];
        newSearchId = ScoreQueryRun(newQuery);
        newSearchId = newSearchId.x;        
    
        dupQuery2 = [...
        'INSERT INTO SearchResult_Study ([SearchResultId],[StudyId],[WorkflowState],[FileState]) ' ...
        'SELECT ' num2str(newSearchId) ',[StudyId],0,[FileState] '...
        'FROM SearchResult_Study ' ...
        'WHERE SearchResultId = ' num2str(searchResultId) ...
        ];    
        ScoreQueryRun(dupQuery2);
        
        dupQuery3 = [...
        'INSERT INTO SearchResult_Description ([SearchResultId],[DescriptionId],[WorkflowState],[FileState]) ' ...
        'SELECT '  num2str(newSearchId) ',[DescriptionId],0,[FileState] '...
        'FROM SearchResult_Description ' ...
        'WHERE SearchResultId = ' num2str(searchResultId) ...
        ];    
        ScoreQueryRun(dupQuery3);
        
        dupQuery4 = [...
        'INSERT INTO SearchResult_EventCoding ([SearchResultId],[EventCodingId],[WorkflowState],[FileState]) ' ...
        'SELECT '  ' ' num2str(newSearchId) ',[EventCodingId],0,[FileState] '...
        'FROM SearchResult_EventCoding ' ...
        'WHERE SearchResultId = ' num2str(searchResultId) ...
        ];    
        ScoreQueryRun(dupQuery4);
        
        dupQuery5 = [...
        'INSERT INTO SearchResult_Event ([SearchResultId],[EventId],[WorkflowState],[FileState]) ' ...
        'SELECT '  num2str(newSearchId) ',[EventId],0,[FileState] '...
        'FROM SearchResult_Event ' ...
        'WHERE SearchResultId = ' num2str(searchResultId) ...
        ];    
        ScoreQueryRun(dupQuery5);
   
        %Subsample by deleting unwanted studies
        %Depends on cascading deletes to delete linked rows in
        % SearchResult_Description, SearchResult_EventCoding etc.
        subSampleStudiesQuery = [...
        'DELETE FROM SearchResult_Study  ' ...
        'WHERE SearchResultStudyId IN ( ' ...
        '    SELECT SearchResultStudyID FROM SearchResult_Study ' ...
        '    WHERE SearchResultId=' num2str(newSearchId) ...
        '      AND SearchResultStudyID NOT IN ( ' ...
        '        SELECT TOP 100 SearchResultStudyId FROM SearchResult_Study    ' ...
        '        WHERE SearchResultId= ' num2str(newSearchId) ...
        '        ORDER BY NEWID() ' ...
        '        ) ' ...
        ') ' ...

        %To look at the result, run this:
        %SELECT SearchResultId, COUNT(SearchResultStudyId) AS Study_n FROM SearchResult_Study GROUP BY SearchResultId ORDER BY SearchResultId
        %SELECT SearchResultId, COUNT(SearchResultDescriptionId) AS Description_n FROM SearchResult_Description GROUP BY SearchResultId ORDER BY SearchResultId
        %SELECT SearchResultId, COUNT(SearchResultEventCodingId) AS EventCoding_n FROM SearchResult_EventCoding GROUP BY SearchResultId ORDER BY SearchResultId
        %SELECT SearchResultId, COUNT(SearchResultEventId) AS Event_n FROM SearchResult_Event GROUP BY SearchResultId ORDER BY SearchResultId
        
        
        ];
        ScoreQueryRun(subSampleStudiesQuery);
        
        
        subSampleDescriptionsQuery = [...
        'DELETE FROM SearchResult_Description WHERE ' ...
        'SearchResult_Description.SearchResultId=' num2str(newSearchId) ' AND ' ...
        'SearchResultDescriptionId NOT IN ( ' ...
        '    SELECT SearchResult_Description.SearchResultDescriptionId ' ...
        '    FROM SearchResult_Study ' ...
        '    INNER JOIN Description ON SearchResult_Study.StudyId = Description.StudyId ' ...
        '    INNER JOIN SearchResult_Description ON SearchResult_Description.DescriptionId = Description.DescriptionId	 ' ...
        '    WHERE SearchResult_Study.SearchResultId=' num2str(newSearchId) ' AND SearchResult_Description.SearchResultId=' num2str(newSearchId) '  ' ...
        ')  ' ...
        ]; 
        ScoreQueryRun(subSampleDescriptionsQuery);                
        
        subSampleEventCodingsQuery = [...
        'DELETE FROM SearchResult_EventCoding WHERE ' ...
        'SearchResult_EventCoding.SearchResultId='  num2str(newSearchId) ' AND ' ...
        '    SearchResultEventCodingId NOT IN (  ' ...
        'SELECT SearchResult_EventCoding.SearchResultEventCodingId ' ...
        'FROM SearchResult_Description	 ' ...
        'INNER JOIN EventCoding ON SearchResult_Description.DescriptionId = EventCoding.DescriptionId ' ...
        'INNER JOIN SearchResult_EventCoding ON SearchResult_EventCoding.EventCodingId = EventCoding.EventCodingId	 ' ...
        'WHERE SearchResult_Description.SearchResultId='  num2str(newSearchId) ...
        '      AND SearchResult_EventCoding.SearchResultId=' num2str(newSearchId) ...
        ')  ' ...
        ]; 
        ScoreQueryRun(subSampleEventCodingsQuery);   
        
        subSampleEventQuery = [...
        'DELETE FROM SearchResult_Event WHERE  ' ...
        'SearchResult_Event.SearchResultId=' num2str(newSearchId) ' AND ' ...
        'SearchResultEventId NOT IN ( ' ...
        '    SELECT SearchResult_Event.SearchResultEventId ' ...
        '    FROM SearchResult_EventCoding	 ' ...
        '    INNER JOIN Event ON SearchResult_EventCoding.EventCodingId = Event.EventCodingId ' ...
        '    INNER JOIN SearchResult_Event ON Event.EventId	= SearchResult_Event.EventId ' ...
        '    WHERE SearchResult_Event.SearchResultId=' num2str(newSearchId) ...
        '          AND SearchResult_EventCoding.SearchResultId=' num2str(newSearchId) ...
        ') ' ...
        ]; 
        ScoreQueryRun(subSampleEventQuery); 
        
    else
        error(['SearchResultId ' num2str(searchResultId) ' not found']);
    end    
end